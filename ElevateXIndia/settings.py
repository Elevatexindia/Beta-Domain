"""
Django settings for ElevateXIndia project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG","False").lower()=="true"

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(" ")


# Application definition

INSTALLED_APPS = [
    'Main',
    'Settings',
    'Blog',
    'jet.dashboard',
    'jet',
    'froala_editor',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'Settings.middleware.UpdateLastActivityMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ElevateXIndia.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "Main/templates","Blog/templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Settings.context_processors.preloader_setting',
            ],
        },
    },
]

WSGI_APPLICATION = 'ElevateXIndia.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

database_url=os.environ.get("DATABASE_URL")
DATABASES['default']=dj_database_url.parse(database_url)


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


#Added Manually
'''STATIC_URL = '/static/'
#Added Manually
STATICFILES_DIRS = [
    BASE_DIR / "static",
    '/var/www/static/',
]'''

STATIC_URL = '/static/'
STATICFILES_DIRS = [ BASE_DIR / "static" ]  # Optional
STATIC_ROOT = BASE_DIR / "staticfiles"      # For collectstatic


# Set MEDIA_URL to public object endpoint for media files (fetch)
SUPABASE_S3_ENDPOINT_URL = os.getenv("SUPABASE_S3_ENDPOINT_URL")  # .../s3
SUPABASE_MEDIA_URL = os.getenv("SUPABASE_MEDIA_URL")  # .../object/public
SUPABASE_S3_BUCKET_NAME = os.getenv("SUPABASE_S3_BUCKET_NAME")

if SUPABASE_MEDIA_URL and SUPABASE_S3_BUCKET_NAME:
    MEDIA_URL = f"{SUPABASE_MEDIA_URL}/{SUPABASE_S3_BUCKET_NAME}/"
else:
    MEDIA_URL = '/media/'
#MEDIA_ROOT = BASE_DIR / "media"             # For local dev fallback

BASE_DIR = Path(__file__).resolve().parent.parent

STORAGES = {
    "default": {
        "BACKEND": "ElevateXIndia.storage_backends.SupabasePublicMediaStorage",
        "OPTIONS": {
            "access_key": os.getenv("SUPABASE_S3_ACCESS_KEY_ID"),
            "secret_key": os.getenv("SUPABASE_S3_SECRET_ACCESS_KEY"),
            "bucket_name": os.getenv("SUPABASE_S3_BUCKET_NAME"),
            "region_name": os.getenv("SUPABASE_S3_REGION_NAME"),
            "endpoint_url": SUPABASE_S3_ENDPOINT_URL,
        },
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}


#STATIC_ROOT='staticfiles'
#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#end Added Manually
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST') 
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_ADDRESS') 
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD')
DEFAULT_FROM_EMAIL = os.environ.get('FROM_EMAIL')
